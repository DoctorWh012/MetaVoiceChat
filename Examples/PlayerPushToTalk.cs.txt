using Assets.Metater;
using Mirror;
using UnityEngine;
using UnityEngine.InputSystem;

public class PlayerPushToTalk : NetworkBehaviour
{
    [Header("References")]
    public PushToTalkVcInputFilter filter;

    private MuteAndDeafen MuteAndDeafen => MetaCache.Object<MuteAndDeafen>();

    public override void OnStartLocalPlayer()
    {
        SpeakerUi.Instance.SetIndex(-1);
    }

    public void OnPushToTalk(InputValue value)
    {
        if (!isLocalPlayer)
        {
            return;
        }

        filter.isPressed = value.isPressed;
    }

    private void Update()
    {
        if (!isLocalPlayer)
        {
            return;
        }

        if (filter.CurrentDecibelLevel.HasValue)
        {
            float decibels = filter.CurrentDecibelLevel.Value;
            int spriteIndex = decibels switch
            {
                < -30f => 0,
                < -20f => 1,
                < -10f => 2,
                _ => 3
            };

            SpeakerUi.Instance.SetIndex(spriteIndex, MuteAndDeafen.IsInputEnabled);
        }
        else
        {
            SpeakerUi.Instance.SetIndex(-1);
        }
    }
}
